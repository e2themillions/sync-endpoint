# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    machine:
      image: ubuntu-2204:2022.04.2
    # Add steps to the jo
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Setup java version
          command: |
            sudo apt-get install openjdk-8-jdk
            sudo update-java-alternatives --set java-1.8.0-openjdk-amd64
            java -version

      - run:
          name: Building the maven project 
          command: |
            # pwd
            sudo env "PATH=$PATH" mvn clean install -DskipTests
            
      - run:
          name: Add configuration to settings file
          command: |
            echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" \
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 \
                                http://maven.apache.org/xsd/settings-1.0.0.xsd"> \
            \
            <activeProfiles> \
              <activeProfile>github</activeProfile> \
            </activeProfiles> \
            \
            <profiles> \
              <profile> \
                <id>github</id> \
                <repositories> \
                  <repository> \
                    <id>central</id> \
                    <url>https://repo1.maven.org/maven2</url> \
                  </repository> \
                  <repository> \
                    <id>github</id> \
                    <url>https://maven.pkg.github.com/tr-sangale/sync-endpoint</url> \
                    <snapshots> \
                      <enabled>true</enabled> \
                    </snapshots> \
                  </repository> \
                </repositories> \
              </profile> \
            </profiles> \
            \
            <servers> \
                <server> \
                  <id>github</id> \
                  <username>${GITHUB_USERNAME}</username> \
                  <password>${GITHUB_TOKEN}</password> \
                </server> \
              </servers> \
            </settings>' > $HOME/.m2/settings.xml
            

      # - run:
      #     name: Configure Maven
      #     command: |
      #       echo "<settings><servers><server><id>github</id><username>${GITHUB_USERNAME}</username><password>${GITHUB_PKG}</password></server></servers></settings>" >> $HOME/.m2/settings.xml

      # - run:
      #     name: Print
      #     command: |
      #       cat $HOME/.m2/settings.xml
      - run:
          name: Deploying jars to remote repo 
          command: |
            cd odk-rest-interface
            sudo env "PATH=$PATH" mvn deploy

      # - run:
      #     name: Saving docker image as tar file
      #     command: |
      #       docker save -o ./sync-endpoint-docker-swarm/sync-endpoint.tar odk/sync-endpoint:latest


      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - .
      # - save_cache:
      #     key: v1-odk/sync-endpoint
      #     paths:
      #       - .

  deploy-push:
    # These next lines define a Docker eecutor: https://circleci.com/docs/executor-types/
    # You can specify an image from Dockerhu or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    machine:
      image: ubuntu-2204:2022.04.2
    
    steps:
      # Checkout the code as the first step.
      # - checkout
      - restore_cache:
          key: v1-odk/sync-endpoint
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Setting up ghcr repo
          command: |
            export CR_PAT=$GHCR_TOKEN
            echo $CR_PAT | docker login ghcr.io -u tr-sangale --password-stdin
            docker load -i ./sync-endpoint-docker-swarm/sync-endpoint.tar
            docker images

      - run:
          name: Pushing the image to GHCR
          command: |
            docker tag odk/sync-endpoint:latest ghcr.io/tr-sangale/sync-endpoint:latest
            docker push ghcr.io/tr-sangale/sync-endpoint:latest

 

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  Build-Test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      # - deploy-push:
          # requires:
          # - build-and-test
